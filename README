Getting started:
================

tachyon3 is a pure x86_64 kernel, no 32bit support (anymore)!

to be able to build tachyon, you will at least need matching
binutils and a compiler. any more or less resent (>4.0) gcc
should do, and any binutils working with it.

A build script for the toolchain is provided, which builds the
currently tested and used (by the developer(s)) versions of the
required packages. Take a look at ./tools/toolchain.sh --help
for information on how to use it. Hint: you will have to download
the source packages manually, and place them in ./tools/.source.
if you have differing versions, either pass the --version param
to toolchain.sh, or directly modify toolchain.sh (the "tools"
array variable near the top of the file).

Now you can do this in the source tachyon root directory:

    make                    # build default arch (x86_64)
    make clean              # remove build directory (removes all
                              generated files, iso images, etc.
    make iso                # build iso image for the current ARCH
    
    make qemu               # run kernel directly in qemu (must be installed)
    make qemu-dbg           # same as above, but run GDB remote stub on :1234
    make gdb                # attach a debugger to the above debugable qemu

    make qemu-netboot       # netboot with qemu builtin ROM, needs qemu with gPXE ROM
    make qemu-netboot-dbg   # same as above, attach debugger with make gdb
    make qemu-netboot-grub2 # use GRUB2 (must be installed) to netboot.
    make qemu-netboot-grub2-dbg # same as above, debug with make gdb
    make qemu-cd            # boot kernel from GRUB2 cd.
    make qemu-cd-dbg        # same as above but with debugger, run make gdb to debug

    make bochs-cd           # boot with bochs from GRUB2 cd (bochs must be installed)

To build the documentation, you need doxygen installed on the
host. Simply call "doxygen" in the top-level source dir, which
will create the documentation in the .doc subdirectory.
